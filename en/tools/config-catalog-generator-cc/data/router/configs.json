{
  "configs": [
    {
      "title": "Router",
      "options": [
        {
          "name": "router",
          "required": true,
          "description": "The configurations required for router to route the traffic from different clients to services.",
          "params": [
            {
              "name": "listenerHost",
              "type": "string",
              "required": true,
              "default": "0.0.0.0",
              "description": "Host for the listener of Router."
            },
            {
              "name": "securedListenerHost",
              "type": "string",
              "required": true,
              "default": "0.0.0.0",
              "description": "Host for the secured listener of Router."
            },
            {
              "name": "listenerPort",
              "type": "string",
              "required": true,
              "default": "9090",
              "description": "Port for the listener of Router."
            },
            {
              "name": "securedListenerPort",
              "type": "string",
              "required": true,
              "default": "9095",
              "description": "Port for secured listener of Router."
            },
            {
              "name": "systemHost",
              "type": "string",
              "required": true,
              "default": "localhost",
              "description": "The system hostname for system API resources (eg: /testkey and /health)."
            },
            {
              "name": "clusterTimeoutInSeconds",
              "type": "integer",
              "required": false,
              "default": "20",
              "description": "The time duration that the Router will wait for an upstream TCP connection to be established."
            },
            {
              "name": "enforcerResponseTimeoutInSeconds",
              "type": "integer",
              "required": false,
              "default": "20",
              "description": "The timeout for response coming from enforcer to route per API request."
            },
            {
              "name": "useRemoteAddress",
              "type": "boolean",
              "required": false,
              "default": false,
              "description": "If configured as true, the Router appends the immediate downstream IP address to the x-forward-for header."
            },
            {
              "name": "perConnectionBufferLimitBytes",
              "type": "integer",
              "required": false,
              "default": "1048576",
              "description": "The buffered payload limit per connection in Bytes. Default value is 1 MiB"
            }
          ]
        }
      ],
      "exampleFile": "router.toml"
    },
    {
      "title": "Connection Timeout",
      "options": [
        {
          "name": "router.connectionTimeout",
          "required": false,
          "description": "Timeouts managed by the Envoy (Router) connection manager in Choreo Connect.",
          "params": [
            {
              "name": "requestTimeoutInSeconds",
              "type": "integer",
              "required": false,
              "default": 0,
              "description": "The time duration that the Router waits for the request to be received by the upstream, starting from the time it was initiated at the client."
            },
            {
              "name": "requestHeadersTimeoutInSeconds",
              "type": "integer",
              "required": false,
              "default": 0,
              "description": "The time duration that the Router waits for the request headers to be received by the upstream, starting from the time it was initiated at the client."
            },
            {
              "name": "streamIdleTimeoutInSeconds",
              "type": "integer",
              "required": false,
              "default": 300,
              "description": "The time duration that the Router will allow a stream to exist with no upstream or downstream activity. This timeout is applied to regular requests/responses as well as streaming requests/responses, and can be overridden by router.upstream.timeouts.routeIdleTimeoutInSeconds"
            },
            {
              "name": "idleTimeoutInSeconds",
              "type": "integer",
              "required": false,
              "default": 3600,
              "description": "The time at which a downstream connection will be terminated if there are no active streams."
            }
          ]
        }
      ],
      "exampleFile": "connection_timeout.toml"
    },
    {
      "title": "Upstream Timeout",
      "options": [
        {
          "name": "router.upstream.timeouts",
          "required": false,
          "description": "Timeout settings related to routes. This will be applicable globally for all the APIs in Choreo Connect.",
          "params": [
            {
              "name": "routeTimeoutInSeconds",
              "type": "integer",
              "required": false,
              "default": 60,
              "description": "This is the value that gets overridden by the timeout set at the endpoint level."
            },
            {
              "name": "maxRouteTimeoutInSeconds",
              "type": "integer",
              "required": false,
              "default": 60,
              "description": "Maximum value accepted as the endpoint level timeout. If a larger timeout is set as the Endpoint Level Upstream Timeout, this value will replace the provided Endpoint Level Upstream Timeout."
            },
            {
              "name": "routeIdleTimeoutInSeconds",
              "type": "integer",
              "required": false,
              "default": 300,
              "description": "The backend (upstream) connection idle timeout. The time duration that the requestâ€™s stream may be idle."
            }
          ]
        }
      ],
      "exampleFile": "upstream_timeout.toml"
    },
    {
      "title": "Upstream Health",
      "options": [
        {
          "name": "router.upstream.health",
          "required": false,
          "description": "Health configuration for upstream clusters.",
          "params": [
            {
              "name": "timeout",
              "type": "integer",
              "required": false,
              "default": 1,
              "description": "Time in seconds to wait for a health check response."
            },
            {
              "name": "interval",
              "type": "integer",
              "required": false,
              "default": 10,
              "description": "Interval between health checks in seconds."
            },
            {
              "name": "unhealthyThreshold",
              "type": "integer",
              "required": false,
              "default": 2,
              "description": "Number of unhealthy health checks required before a host is marked as unhealthy."
            },
            {
              "name": "healthyThreshold",
              "type": "integer",
              "required": false,
              "default": 2,
              "description": "Number of healthy health checks required before a host is marked as healthy."
            }
          ]
        }
      ],
      "exampleFile": "upstream_health.toml"
    },
    {
      "title": "Router Keystore",
      "options": [
        {
          "name": "router.keystore",
          "required": true,
          "description": "The configurations of key store used in Choreo Connect Router",
          "params": [
            {
              "name": "certPath",
              "type": "string",
              "required": true,
              "default": "/home/wso2/security/keystore/mg.pem",
              "description": "Path of the certificate of the Adaptor"
            },
            {
              "name": "keyPath",
              "type": "string",
              "required": true,
              "default": "/home/wso2/security/keystore/mg.key",
              "description": "Path of the private key of the Adaptor"
            }
          ]
        }
      ],
      "exampleFile": "keystore.toml"
    },
    {
      "title": "CORS",
      "options": [
        {
          "name": "router.cors",
          "required": false,
          "description": "CORS configurations",
          "params": [
            {
              "name": "enabled",
              "type": "boolean",
              "required": true,
              "possible": "true, false",
              "description": "Enable CORS configurations globally for all endpoints and APIs deployed in Choreo Connect Router"
            },
            {
              "name": "allowOrigins",
              "type": "list of strings",
              "required": true,
              "description": "Allowed origins. set this to [*] allow all origins."
            },
            {
              "name": "allowMethods",
              "type": "list of strings",
              "required": true,
              "description": "The content for the access-control-allow-methods header."
            },
            {
              "name": "allowHeaders",
              "type": "list of strings",
              "required": true,
              "description": "The content for the access-control-allow-headers header."
            },
            {
              "name": "exposeHeaders",
              "type": "list of strings",
              "required": true,
              "description": "The content for the access-control-expose-headers header."
            },
            {
              "name": "allowCredentials",
              "type": "boolean",
              "required": true,
              "default": "false",
              "description": "Specifies whether the resource allows credentials."
            }
          ]
        }
      ],
      "exampleFile": "cors.toml"
    },
    {
      "title": "Upstream Retry",
      "options": [
        {
          "name": "router.upstream.retry",
          "required": false,
          "description": "The configurations for the Choreo Connect router when retrying upstream clusters.",
          "params": [
            {
              "name": "maxRetryCount",
              "type": "integer",
              "required": false,
              "default": 5,
              "description": "Maximum value that can be set as the count within the Endpoint Level Retry configuration."
            },
            {
              "name": "baseIntervalInMillis",
              "type": "integer",
              "required": false,
              "default": 25,
              "description": "Base interval for the Envoy's (Router's) exponential retry back off algorithm"
            },
            {
              "name": "statusCodes",
              "type": "list of integers",
              "required": false,
              "default": [ 504 ],
              "description": "HTTP status codes that would switch on the retry mechanism when an Endpoint Level Retry configuration is set. The list here is used when the retry configuration is set via the WSO2 API-M UI or when all given status codes are out of range."
            }
          ]
        }
      ],
      "exampleFile": "upstream_retry.toml"
    },
    {
      "title": "Upstream TLS",
      "options": [
        {
          "name": "router.upstream.tls",
          "required": false,
          "description": "The configurations for SSL configuration related to the backend connection in Choreo Connect.",
          "params": [
            {
              "name": "minimumProtocolVersion",
              "type": "string",
              "required": false,
              "default": "TLS1_1",
              "possible": "TLSv1_0, TLSv1_1, TLSv1_2, TLSv1_3",
              "description": "Minimum TLS protocol version."
            },
            {
              "name": "maximumProtocolVersion",
              "type": "string",
              "required": false,
              "default": "TLS1_2",
              "possible": "TLSv1_0, TLSv1_1, TLSv1_2, TLSv1_3",
              "description": "Maximum TLS protocol version."
            },
            {
              "name": "ciphers",
              "type": "string",
              "required": false,
              "default": "ECDHE-ECDSA-AES128-GCM-SHA256, ECDHE-RSA-AES128-GCM-SHA256, ECDHE-ECDSA-AES128-SHA, ECDHE-RSA-AES128-SHA, AES128-GCM-SHA256, AES128-SHA, ECDHE-ECDSA-AES256-GCM-SHA384, ECDHE-RSA-AES256-GCM-SHA384, ECDHE-ECDSA-AES256-SHA, ECDHE-RSA-AES256-SHA, AES256-GCM-SHA384, AES256-SHA",
              "description": "If specified, the TLS listener will only support the specified [cipher list]() when negotiating TLS 1.0-1.2 (this setting has no effect when negotiating TLS 1.3)"
            },
            {
              "name": "trustedCertPath",
              "type": "string",
              "required": true,
              "default": "/etc/ssl/certs/ca-certificates.crt",
              "description": "Path to trusted certificates"
            },
            {
              "name": "verifyHostName",
              "type": "boolean",
              "required": true,
              "default": "true",
              "possible": "true, false",
              "description": "Enable/Disable Verifying host name"
            },
            {
              "name": "disableSslVerification",
              "type": "boolean",
              "required": false,
              "default": "false",
              "possible": "true, false",
              "description": "Disable SSL verification"
            }
          ]
        }
      ],
      "exampleFile": "upstream_tls.toml"
    },
    {
      "title": "Downstream TLS",
      "options": [
        {
          "name": "router.downstream.tls",
          "required": false,
          "description": "The configurations for SSL configuration related to the downstream in Choreo Connect.",
          "params": [
            {
              "name": "trustedCertPath",
              "type": "string",
              "required": true,
              "default": "/etc/ssl/certs/ca-certificates.crt",
              "description": "Path to trusted ca-certificates"
            },
            {
              "name": "mTLSAPIsEnabled",
              "type": "boolean",
              "required": true,
              "default": "false",
              "possible": "true, false",
              "description": "Enable mTLS APIs in Choreo Connect."
            }
          ]
        }
      ],
      "exampleFile": "downstream_tls.toml"
    },
    {
      "title": "Request Payload Passing To Enforcer",
      "options": [
        {
          "name": "router.payloadPassingToEnforcer",
          "required": false,
          "description": "The configurations for the Choreo Connect router when passing the request payload to the Enforcer.",
          "params": [
            {
              "name": "passRequestPayload",
              "type": "boolean",
              "required": true,
              "default": "false",
              "possible": "true, false",
              "description": "Enable/Disable request payload passing to the Enforcer."
            },
            {
              "name": "maxRequestBytes",
              "type": "integer",
              "required": false,
              "default": 10240,
              "description": "The maximum allowed size of a message body in bytes."
            },
            {
              "name": "allowPartialMessage",
              "type": "boolean",
              "required": false,
              "default": false,
              "description": "If enabled, the request payload will be buffered until the maxRequestBytes is reached."
            },
            {
              "name": "packAsBytes",
              "type": "boolean",
              "required": false,
              "default": false,
              "description": "If enabled, the request payload will be passed as raw bytes to the Enforcer. Disabling this will provide a UTF-8 string request payload to the Enforcer."
            }
          ]
        }
      ],
      "exampleFile": "request_payload_passing.toml"
    },
    {
      "title": "Filters used in the Router",
      "options": [
        {
          "name": "router.filters",
          "required": false,
          "description": "Configurations for the filters used in the Choreo Connect Router",
          "params": [
            {
            }
          ]
        },
        {
          "name": "router.filters.compression",
          "required": true,
          "description": "The configurations related to the Choreo Connect Router's compression filter",
          "params": [
            {
              "name": "enabled",
              "type": "boolean",
              "required": true,
              "default": "false",
              "possible": "true, false",
              "description": "Enable/Disable compression filter in Choreo Connect Router."
            },
            {
              "name": "library",
              "type": "string",
              "required": true,
              "default": "gzip",
              "description": "Defines compression library used with the compression filter."
            }
          ]
        },
        {
          "name": "router.filters.compression.requestDirection",
          "required": true,
          "description": "The configurations for the Choreo Connect router's request flow HTTP payload data compression",
          "params": [
            {
              "name": "enabled",
              "type": "boolean",
              "required": true,
              "default": "false",
              "possible": "true, false",
              "description": "Enable/Disable data compression for the Choreo Connect request flow."
            },
            {
              "name": "minimumContentLength",
              "type": "integer",
              "required": false,
              "default": 30,
              "possible": "Unsigned integer value less than or equal to 4294967295",
              "description": "Minimum request payload size to consider before applying the data compression"
            },
            {
              "name": "contentType",
              "type": "list of strings",
              "required": false,
              "default": "[\"application/javascript\", \"application/json\", \"application/xhtml+xml\", \"image/svg+xml\", \"text/css\", \"text/html\", \"text/plain\", \"text/xml\"]",
              "possible": "[application/javascript, application/json, application/xhtml+xml, image/svg+xml, text/css, text/html, text/plain, text/xml]",
              "description": "Content type to consider for data compression"
            }
          ]
        },
        {
          "name": "router.filters.compression.responseDirection",
          "required": true,
          "description": "The configurations for the Choreo Connect router's response flow HTTP payload data compression",
          "params": [
            {
              "name": "enabled",
              "type": "boolean",
              "required": true,
              "default": "true",
              "possible": "true, false",
              "description": "Enable/Disable data compression for the Choreo Connect response flow."
            },
            {
              "name": "minimumContentLength",
              "type": "integer",
              "required": false,
              "default": 30,
              "possible": "Unsigned integer value less than  or equal to 4294967295",
              "description": "Minimum response payload size to consider before applying the data compression"
            },
            {
              "name": "contentType",
              "type": "list of strings",
              "required": false,
              "default": "[\"application/javascript\", \"application/json\", \"application/xhtml+xml\", \"image/svg+xml\", \"text/css\", \"text/html\", \"text/plain\", \"text/xml\"]",
              "possible": "[application/javascript, application/json, application/xhtml+xml, image/svg+xml, text/css, text/html, text/plain, text/xml]",
              "description": "Content type to consider for the data compression"
            }
          ]
        },
        {
          "name": "router.filters.compression.libraryProperties",
          "required": false,
          "description": "The configurations for the Choreo Connect router's compression library",
          "params": [
            {
              "name": "memoryLevel",
              "type": "integer",
              "required": false,
              "default": 3,
              "possible": "Value between 1 to 9",
              "description": "Amount of internal memory used by the gzip zlib library"
            },
            {
              "name": "windowBits",
              "type": "integer",
              "required": false,
              "default": 12,
              "possible": "Value between 9 to 15",
              "description": "Represents the base two logarithmic of the compressorâ€™s window size"
            },
            {
              "name": "compressionLevel",
              "type": "integer",
              "required": false,
              "default": 9,
              "possible": "Value between 9 to 15",
              "description": "Denotes zlib library's compression level. Level 9 provides the highest compression."
            },
            {
              "name": "compressionStrategy",
              "type": "string",
              "required": false,
              "default": "defaultStrategy",
              "possible": "gzipFiltered, gzipHuffmanOnly, gzipRLE, gzipFixed",
              "description": "Denotes zlib library's compression strategy. Value can change based on the content type shared with the request. For most of the cases default strategy is the best choice."
            },
            {
              "name": "chunkSize",
              "type": "integer",
              "required": false,
              "default": 4096,
              "possible": "Unsigned integer value less than or equal to 4294967295",
              "description": "Denotes zlib library's next output buffer size in bytes"
            }
          ]
        }

      ],
      "exampleFile": "router_filters.toml"
    }
  ]
}
